<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:Controls1="clr-namespace:Cyclops.MainApplication.Controls" xmlns:vm="clr-namespace:Cyclops.MainApplication.ViewModel" xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:GalaSoft_MvvmLight_Command="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4" xmlns:Controls="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit.Extended" xmlns:View="clr-namespace:Cyclops.MainApplication.View" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" x:Class="Cyclops.MainApplication.ConferenceView" 
             IsVisibleChanged="UserControl_IsVisibleChanged"
             d:DesignHeight="400" d:DesignWidth="500" TextOptions.TextFormattingMode="Display"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance {x:Type vm:ConferenceViewModelDesignTime}, IsDesignTimeCreatable=True}">
 
	<UserControl.Resources>

		<DataTemplate x:Key="MemberInfoTemplate">
			<Grid Height="32">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="40" />
					<ColumnDefinition />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition />
					<RowDefinition />
				</Grid.RowDefinitions>
                <Image Grid.RowSpan="2" Source="{Binding AvatarUrl}" Height="27" Width="29" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality" />
				<TextBlock x:Name="nickTextBlock" Grid.Column="1" Text="{Binding Nick, FallbackValue=Nick}" FontWeight="Bold" FontSize="13.333" Foreground="#FF565656" />
				<TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding StatusText, FallbackValue=Some_status}" Foreground="#FF919191" Margin="0,0,0,0" />
			

			
			<Border x:Name="awayMark" Visibility="Hidden" Grid.RowSpan="1" BorderBrush="#FF9B9B9B" BorderThickness="1" Background="White" RenderTransformOrigin="0.5,0.5" Margin="15.989,-1.737,0.759,3.177" Grid.Row="1" d:LayoutOverrides="VerticalAlignment" CornerRadius="2">
				<Border.RenderTransform>
					<TransformGroup>
						<ScaleTransform/>
						<SkewTransform AngleX="-18"/>
						<RotateTransform Angle="-17.859"/>
						<TranslateTransform X="-1"/>
					</TransformGroup>
				</Border.RenderTransform>
			</Border>
			
			<Border x:Name="naMark" Visibility="Hidden" Grid.RowSpan="1" BorderBrush="#FF9B9B9B" BorderThickness="1" Background="White" RenderTransformOrigin="0.5,0.5" Margin="15.989,-1.737,0.759,3.177" Grid.Row="1" d:LayoutOverrides="VerticalAlignment" CornerRadius="2">
				<Border.RenderTransform>
					<TransformGroup>
						<ScaleTransform/>
						<SkewTransform AngleX="-18"/>
						<RotateTransform Angle="-17.859"/>
						<TranslateTransform X="-1"/>
					</TransformGroup>
				</Border.RenderTransform>
				<TextBlock Text="NA" FontWeight="Bold" Margin="2,-1,0,0" Foreground="#FFBC2E2E" FontSize="10.667"/>
			</Border>
			
			</Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsModer}" Value="True">
                    <Setter TargetName="nickTextBlock" Property="Foreground" Value="Green" />
                </DataTrigger>
                <DataTrigger Binding="{Binding StatusType}" Value="xa">
                    <Setter TargetName="naMark" Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding StatusType}" Value="dnd">
                    <Setter TargetName="awayMark" Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding StatusType}" Value="away">
                    <Setter TargetName="awayMark" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </DataTemplate.Triggers>
		</DataTemplate>

        <CollectionViewSource x:Key="membersSource" Source="{Binding ConferenceViewModel.Conference.Members}">
            <CollectionViewSource.SortDescriptions>
                <ComponentModel:SortDescription PropertyName="IsModer" Direction="Descending"/>
                <ComponentModel:SortDescription PropertyName="Nick"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

	</UserControl.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="3*" MinWidth="100" />
			<ColumnDefinition Width="*" MinWidth="100" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition />
			<RowDefinition Height="60" />
		</Grid.RowDefinitions>

		<TextBox Height="24" IsReadOnly="True" Text="{Binding ConferenceViewModel.Conference.Subject, Mode=OneWay}" 
                 VerticalAlignment="Center" Margin="0,0,24,0"  />
        <Button x:Name="changeSubject" HorizontalAlignment="Right" Width="24" Height="24">
            <Image Source="..\Resources\editicon.png" >
            	<i:Interaction.Triggers>
            		<i:EventTrigger EventName="Click" SourceObject="{Binding ElementName=changeSubject, Mode=OneWay}">
            			<ei:ChangePropertyAction TargetObject="{Binding ElementName=subjectChanger, Mode=OneWay}" PropertyName="WindowState">
            				<ei:ChangePropertyAction.Value>
            					<Controls:WindowState>Open</Controls:WindowState>
            				</ei:ChangePropertyAction.Value>
            			</ei:ChangePropertyAction>
            		</i:EventTrigger>
            	</i:Interaction.Triggers>
            </Image>
        </Button>
    
   
		<Controls1:ChatFlowDocumentScrollViewer Grid.Row="1" BorderThickness="1">
			<Controls1:ChatFlowDocument TextOptions.TextFormattingMode="Display" Messages="{Binding ConferenceViewModel.Messages}" LineHeight="1" Style="{DynamicResource flowDocumentStyle}" />
		</Controls1:ChatFlowDocumentScrollViewer>


        <Grid Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Expander IsExpanded="False" IsEnabled="False" FontWeight="Bold" Foreground="DarkGray" Header="{Binding ConferenceViewModel.Conference.ConferenceId.Resource}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition Height="18" />
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" FontWeight="Normal" VerticalAlignment="Bottom" Text="Nick:" />
                    <TextBox Margin="4" FontWeight="Normal" MaxLength="60" Grid.Row="1" Text="{Binding ConferenceViewModel.NewNick, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                             Controls1:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"/>
                    <TextBlock Grid.Row="2" FontWeight="Normal" VerticalAlignment="Bottom" Text="Status:" />
                    <TextBox Margin="4" FontWeight="Normal" MaxLength="60" Grid.Row="3" Text="{Binding ConferenceViewModel.StatusText, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                             Controls1:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"/>
                </Grid>
            </Expander>
            <ListBox Grid.Row="1"
                 ItemsSource="{Binding Source={StaticResource membersSource}}" 
                 ItemTemplate="{StaticResource MemberInfoTemplate}" ScrollViewer.CanContentScroll="False" 
                 ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                 SelectedItem="{Binding ConferenceViewModel.SelectedMember, Mode=TwoWay}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <GalaSoft_MvvmLight_Command:EventToCommand Command="{Binding ConferenceViewModel.StartPrivateWithSelectedMember}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListBox>
        </Grid>
		<Grid Grid.Row="2" Grid.ColumnSpan="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition  />
				<ColumnDefinition Width="65" />
			</Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
			<Controls1:InputBox x:Name="inputBox" Grid.Row="1" 
                                Text="{Binding ConferenceViewModel.CurrentlyTypedMessage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                SendCommand="{Binding ConferenceViewModel.SendMessage}" />
            <Button Grid.Row="1" Grid.Column="1" Content="{Binding Conference.Send, Source={StaticResource ResourceWrapper}}" Command="{Binding ConferenceViewModel.SendMessage}" />

            <Button x:Name="smilesButton" HorizontalAlignment="Left" Click="SmilesButtonClick">
                <Image Height="20" Width="20" Source="..\Resources\Smile.gif"/>
            </Button>
        </Grid>

		<GridSplitter Grid.RowSpan="2" Grid.Column="1" Height="Auto" Width="2" HorizontalAlignment="Left" />

        <Controls:ChildWindow IsModal="True" Caption="Subject changing" x:Name="subjectChanger" Width="380" Height="220" WindowStartupLocation="Center">
            <View:CommonInputView DataContext="{Binding ConferenceViewModel.SubjectChangeViewModel}" />
        </Controls:ChildWindow>
        
    </Grid>
</UserControl>