name: Release
on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

jobs:
  release:
    runs-on: windows-2022
    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      NUGET_PACKAGES: ${{ github.workspace }}/.github/nuget-packages
    steps:
      - name: Read version from Git ref
        id: version
        shell: pwsh
        run: echo "version=$(if ($env:GITHUB_REF.StartsWith('refs/tags/v')) { $env:GITHUB_REF -replace '^refs/tags/v', '' } else { 'next' })" >> $env:GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v4

      - name: NuGet cache
        uses: actions/cache@v4
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}.nuget.${{ hashFiles('**/*.csproj') }}
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Publish for Windows
        shell: pwsh
        run: >
          dotnet publish Cyclops.MainApplication --runtime win-x64 --configuration Release --output publish --self-contained
          && Compress-Archive ./publish/* -DestinationPath CyclopsChat-v${{ steps.version.outputs.version }}.win-x64.zip

      - name: Read the changelog
        uses: ForNeVeR/ChangelogAutomation.action@v1
        with:
          input: ./CHANGELOG.md
          output: ./changelog-section.md

      - name: Upload the artifact
        uses: actions/upload-artifact@v4
        with:
          name: CyclopsChat-v${{ steps.version.outputs.version }}.win-x64.zip
          path: ./CyclopsChat-v${{ steps.version.outputs.version }}.win-x64.zip

      - name: Upload the changelog
        uses: actions/upload-artifact@v4
        with:
          name: changelog-section.md
          path: ./changelog-section.md

      - name: Create release
        if: startsWith(github.ref, 'refs/tags/v')
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: CyclopsChat v${{ steps.version.outputs.version }}
          body_path: ./changelog-section.md

      - name: Upload the distribution to the releases page
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_name: CyclopsChat-v${{ steps.version.outputs.version }}.win-x64.zip
          asset_path: ./CyclopsChat-v${{ steps.version.outputs.version }}.win-x64.zip
          asset_content_type: application/zip
